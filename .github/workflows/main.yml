name: MY_BACKEND Security Scan
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  security-checks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Dependencies
      run: |
        npm ci
        npm install -g npm-force-resolutions
        npx npm-force-resolutions

    - name: Dependency Security Audit
      continue-on-error: true
      run: |
        npm audit --audit-level=high
        npm audit signatures

    - name: Secret Detection
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base_ref: ${{ github.head_ref || github.ref }}

    - name: Semgrep Security Scan
      uses: semgrep/semgrep-action@v1
      with:
        config: >-
          r/all
          r/javascript
          r/nodejs
          r/security-audit

    - name: Docker Build and Scan
      run: |
        docker build -t my-backend .
        docker scout quickview
        docker scout cves my-backend --format sarif > docker-cves.sarif

    - name: Kubernetes Security Configuration
      run: |
        # Automated security context updates
        for service in mongodb backend frontend; do
          sed -i "/$service:/,/^$/c\- name: $service\n  securityContext:\n    allowPrivilegeEscalation: false\n    runAsNonRoot: true\n    readOnlyRootFilesystem: true" DEPLOYEMENT/K8/k8.yaml
        done

    - name: CSRF Protection Implementation
      run: |
        npm install csurf
        sed -i '/const app = express();/a\const csrf = require("csurf");\napp.use(csrf());' server.js

    - name: Upload Security Scan Results
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: |
          docker-cves.sarif
          semgrep-results.json

    - name: Check for High Severity Vulnerabilities
      run: |
        if [ $(grep -c 'high' docker-cves.sarif) -gt 0 ]; then
          echo "High severity vulnerabilities detected"
          exit 1
        fi
