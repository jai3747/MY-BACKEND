# templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  labels:
    {{- include "mern-app.labels" . | nindent 4 }}
    app: backend
spec:
  replicas: {{ .Values.backend.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "mern-app.selectorLabels" . | nindent 6 }}
      app: backend
  template:
    metadata:
      labels:
        {{- include "mern-app.selectorLabels" . | nindent 8 }}
        app: backend
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.port }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: production
            - name: PORT
              value: "{{ .Values.backend.service.port }}"
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mongodb-secret
                  key: MONGO_URI
            - name: FRONTEND_URL
              value: "{{ .Values.frontend.url }}"
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frontend
  labels:
    {{- include "mern-app.labels" . | nindent 4 }}
    app: frontend
spec:
  replicas: {{ .Values.frontend.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "mern-app.selectorLabels" . | nindent 6 }}
      app: frontend
  template:
    metadata:
      labels:
        {{- include "mern-app.selectorLabels" . | nindent 8 }}
        app: frontend
    spec:
      containers:
        - name: frontend
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.frontend.service.port }}
              protocol: TCP
          env:
            - name: REACT_APP_API_URL
              value: "{{ .Values.backend.url }}"
            - name: REACT_APP_ENV
              value: production
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-temp
              mountPath: /tmp
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
          securityContext:
            runAsUser: 101
            runAsGroup: 101
            runAsNonRoot: true
      volumes:
        - name: nginx-config
          configMap:
            name: {{ .Release.Name }}-nginx-config
        - name: nginx-temp
          emptyDir: {}
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mongodb
  labels:
    {{- include "mern-app.labels" . | nindent 4 }}
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "mern-app.selectorLabels" . | nindent 6 }}
      app: mongodb
  template:
    metadata:
      labels:
        {{- include "mern-app.selectorLabels" . | nindent 8 }}
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
          imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
          resources:
            {{- toYaml .Values.mongodb.resources | nindent 12 }}
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-mongodb-pvc
